// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// GetAPIVideoIDHandlerFunc turns a function with the right signature into a get API video ID handler
type GetAPIVideoIDHandlerFunc func(GetAPIVideoIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAPIVideoIDHandlerFunc) Handle(params GetAPIVideoIDParams) middleware.Responder {
	return fn(params)
}

// GetAPIVideoIDHandler interface for that can handle valid get API video ID params
type GetAPIVideoIDHandler interface {
	Handle(GetAPIVideoIDParams) middleware.Responder
}

// NewGetAPIVideoID creates a new http.Handler for the get API video ID operation
func NewGetAPIVideoID(ctx *middleware.Context, handler GetAPIVideoIDHandler) *GetAPIVideoID {
	return &GetAPIVideoID{Context: ctx, Handler: handler}
}

/*GetAPIVideoID swagger:route GET /api/video/{id} getApiVideoId

GetAPIVideoID get API video ID API

*/
type GetAPIVideoID struct {
	Context *middleware.Context
	Handler GetAPIVideoIDHandler
}

func (o *GetAPIVideoID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAPIVideoIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetAPIVideoIDOKBody get API video ID o k body
// swagger:model GetAPIVideoIDOKBody
type GetAPIVideoIDOKBody struct {

	// comment count
	CommentCount int64 `json:"commentCount,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// embedurl
	Embedurl string `json:"embedurl,omitempty"`

	// first retrive
	FirstRetrive string `json:"firstRetrive,omitempty"`

	// length
	Length string `json:"length,omitempty"`

	// mylist count
	MylistCount int64 `json:"mylistCount,omitempty"`

	// tags
	Tags []string `json:"tags"`

	// title
	Title string `json:"title,omitempty"`

	// viw count
	ViwCount int64 `json:"viwCount,omitempty"`
}

// Validate validates this get API video ID o k body
func (o *GetAPIVideoIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIVideoIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIVideoIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetAPIVideoIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
